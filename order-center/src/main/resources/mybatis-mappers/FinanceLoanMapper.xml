<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.order.dao.FinanceLoanDao">

    <select id="getFinancePayLogModelByOrderNo" resultType="com.cloud.model.pay.FinancePayLogModel"
            parameterType="Map">
        select * from finance_pay_log where order_no = #{orderNo} and pay_status = #{payStatus} and loan_type in
        <foreach collection="loanTypes" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and handler=#{handler}

    </select>

    <select id="getFinanceDueOrderByOrderNo" resultType="com.cloud.order.model.FinanceDueOrderModel"
            parameterType="java.lang.String">
        select
        id,
        order_no,
        customer_no,
        name,
        mobile,
        loan_amount,
        due_days,
        due_amount,
        due_start,
        case when due_end = '0000-00-00' then null
        else due_end end due_end
        ,finished_type
        from finance_due_order where order_no = #{orderNo}
        <if test="dueIsEnd != null and dueIsEnd != ''">
            and due_end is null
        </if>

        order by create_time desc limit 1
    </select>

    <!--线下还款 获取未结清的借据-->
    <select id="getUncloseIous" parameterType="Map" resultType="com.cloud.model.user.UserLoan">
        select ul.* , pl.term loanPeriod, orc.id voucherId from (select * from user_loan where user_phone=#{mobile} and
        loan_status in
        <foreach collection="iousStatus" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>) ul

        left join product_loan pl on pl.id=ul.product_id
        left join order_offline_repay_voucher orc on ul.loan_number=orc.order_no AND orc.is_confirm = 0
    </select>

    <select id="queryOfflineRepayOrderList" parameterType="Map" resultType="com.cloud.model.user.UserLoan">
        SELECT
        voucher.id AS voucherId,
        voucher.operate_type AS operateType,
        voucher.transfer_amount,
        pl.term AS loanPeriod,
        ul.*
        FROM
        order_offline_repay_voucher voucher
        INNER JOIN user_loan ul ON ul.loan_number = voucher.order_no
        INNER JOIN product_loan pl ON pl.id = ul.product_id
        <where>
            <if test="mobile != null and mobile != ''">
                AND ul.user_phone = #{mobile}
            </if>
            <if test="operateType != null and operateType == 1">
                AND ul.loan_status = 2 AND voucher.operate_type = #{operateType}
            </if>
            <if test="operateType != null and operateType == 2">
                AND ul.loan_status = 0 AND ul.overdue_status = 1 AND voucher.operate_type = #{operateType}
            </if>
            <if test="operateType != null and operateType == 0">
                AND ((ul.loan_status = 0 AND ul.overdue_status = 1) OR ul.loan_status = 2)
            </if>
        </where>
        ORDER BY voucher.update_time DESC
    </select>

    <select id="getFinanceLoan" resultType="com.cloud.model.product.FinanceLoanModel" parameterType="Map">
        select create_time createTime,
        loan_amount loanAmount,
        pay_amount payAmount,
        customer_no customerNo,
        name ,
        mobile,
        loan_period loanPeriod,
        bank_no bankNo,
        loan_channel loanChannel,
        pay_status payStatus,
        order_status orderStatus,
        failure_reason failureReason,
        comment ,
        id,

        loan_number loanNumber,
        order_no orderNo
        from finance_loan
        <where>
            1=1
            <if test="beginDate != null and beginDate != ''">
                and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                and DATE_FORMAT(create_time,'%Y-%m-%d') &lt;= #{endDate}
            </if>
            <if test="customerNo != null and customerNo != ''">
                and customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile like concat('%',#{mobile},'%')
            </if>
            <if test="loanChannel != null and loanChannel != ''">
                and loan_channel = #{loanChannel}
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                and order_status = #{orderStatus}
            </if>
            <if test="payStatus != null and payStatus != ''">
                and pay_status = #{payStatus}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="getFinanceLoanFailure" parameterType="Map" resultType="com.cloud.model.product.FinanceLoanModel">
        select f.* from finance_loan f
        join finance_pay_log l on f.order_no=l.order_No and l.id in (select max(id) from finance_pay_log GROUP BY
        order_no)

        where (f.order_status=0 OR ( f.order_status = 2 AND l .loan_type = 2 ))


        <if test="beginDate != null and beginDate != ''">
                and DATE_FORMAT(f.create_time,'%Y-%m-%d') >= #{beginDate}
            </if>
        <if test="endDate != null and endDate != ''">
                and DATE_FORMAT(f.create_time,'%Y-%m-%d') &lt;= #{endDate}
            </if>
        <if test="customerNo != null and customerNo != ''">
                and f.customer_no like concat('%',#{customerNo},'%')
            </if>
        <if test="mobile != null and mobile != ''">
                and f.mobile like concat('%',#{mobile},'%')
            </if>
        <if test="loanChannel != null and loanChannel != ''">
                and f.loan_channel = #{loanChannel}
            </if>
        <if test="isInvalid!=null and  isInvalid!=''">
            <if test="isInvalid==1">  and   date_add(  DATE_FORMAT(f.create_time,'%Y-%m-%d') , INTERVAL 7 DAY )&lt;= DATE_FORMAT(NOW(),'%Y-%m-%d') </if>
            <if test="isInvalid==2"> and  date_add(  DATE_FORMAT(f.create_time,'%Y-%m-%d') , INTERVAL 7 DAY )>  DATE_FORMAT(NOW(),'%Y-%m-%d')</if>
        </if>

        order by
        <if test="isInvalid!=null and  isInvalid!=''">
            <if test="isInvalid==1">  f.create_time desc </if>
            <if test="isInvalid!=1">    f.create_time   </if>
        </if>
        <if test="isInvalid==null or  isInvalid==''">
            f.create_time  desc
        </if>


    </select>

    <select id="getFinanceLoanById" resultType="com.cloud.model.product.FinanceLoanModel">
        select
          id,
         create_time createTime,
         customer_no customerNo,
         name,
         mobile,
         loan_period loanPeriod,
         loan_amount loanAmount,
         pay_amount payAmount,
         bank_no bankNo,
         loan_channel loanChannel,
         failure_reason failureReason,
         pay_status payStatus,
         order_status orderStatus,
         comment,
         loan_number loanNumber,
         order_no orderNo,
         modify_bankcard_count modifyBankcardCount,
         notice_modify_bankcard_date noticeModifyBankcardDate

        from finance_loan
        where  order_status = 0 and id = #{id}
    </select>

    <insert id="savePayLog" parameterType="com.cloud.model.pay.FinancePayLogModel" useGeneratedKeys="true"
            keyProperty="id">
        insert into finance_pay_log
        (create_time, order_no, customer_no,
         name, mobile, amount, bank_no,
         loan_type, handler, pay_status,
          order_status, repay_date, loan_channel,
          failure_reason,serial_number,origin_amount)
           values
           (now(),#{orderNo},#{customerNo},
           #{name},#{mobile},#{amount},#{bankNo},
           #{loanType},#{handler},#{payStatus},
           #{orderStatus},#{repayDate},#{loanChannel},
           #{failureReason},#{serialNumber},#{originAmount})
    </insert>

    <insert id="saveLoanSnapshot" parameterType="com.cloud.model.product.FinanceLoanModel" useGeneratedKeys="true"
            keyProperty="id">
        insert into finance_loan_snapshot
        (create_time, order_no, customer_no,
         name, mobile, loan_period,
         loan_amount, pay_amount, bank_no,
          loan_channel, pay_status, order_status,
          failure_reason, comment, loan_number)
           VALUES
           (now(),#{orderNo},#{customerNo},
           #{name},#{mobile},#{loanPeriod},
           #{loanAmount},#{payAmount},#{bankNo},
           #{loanChannel},#{payStatus},#{orderStatus},
           #{failureReason},#{comment},#{loanNumber})
    </insert>

    <update id="updateLoanStatus">
        update finance_loan
        set order_status = #{orderStatus}
        where id = #{id}
    </update>

    <update id="updatePayLogFail">
        update finance_pay_log
        set pay_status = 0,
            order_status = 0,
            failure_reason = #{failureReason}
        where id = #{id}
    </update>

    <update id="updateLoanFail">
        update finance_loan
        set pay_status = 0,
            order_status = 0,
            failure_reason = #{failureReason}
        where id = #{id}
    </update>

    <select id="getFinanceLoanIdByPayLogId" resultType="String">
        select a.id from finance_loan a
        left join finance_pay_log b on a.order_no=b.order_no
        where b.id = #{id}
    </select>

    <update id="updateLoanSuccess">
        update finance_loan
        set order_status = 1,
             pay_status = 1,
             failure_reason = ''
        where id = #{id}
    </update>

    <update id="updatePayLogSuccess">
        update finance_pay_log
        set order_status = 1,
            pay_status = 1
        where id = #{id}
    </update>

    <select id="getPayLog" parameterType="Map" resultType="Map">
        select
        id,
        DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') createTime,
        DATE_FORMAT(repay_date,'%Y-%m-%d') repayDate,
        CONCAT('MN',order_no,'PD') orderNo,
        customer_no customerNo,
        name,
        mobile,
        amount,
        bank_no bankNo,
        loan_type loanType,
        handler,
        pay_status payStatus,
        order_status orderStatus,
        loan_channel loanChannel
        from finance_pay_log
        <where>
            1=1
            <if test="beginDate != null and beginDate != ''">
                and DATE_FORMAT(create_time,'%Y-%m-%d') >= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                and DATE_FORMAT(create_time,'%Y-%m-%d') &lt;= #{endDate}
            </if>
            <if test="customerNo != null and customerNo != ''">
                and customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile like concat('%',#{mobile},'%')
            </if>
            <if test="orderNo != null and orderNo != ''">
                and CONCAT('MN',order_no,'PD') like concat('%',#{orderNo},'%')
            </if>
            <if test="repayDate !=null and repayDate != ''">
                and DATE_FORMAT(repay_date,'%Y-%m-%d') = #{repayDate}
            </if>
            <if test="loanType != null and loanType != ''">
                and loan_type = #{loanType}
            </if>
            <if test="handler != null and handler != ''">
                and handler = #{handler}
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                and order_status = #{orderStatus}
            </if>
            <if test="loanChannel != null and loanChannel != ''">
                and loan_channel = #{loanChannel}
            </if>
        </where>
        order by create_time desc
    </select>

    <insert id="insertFinanceRepayByLoanId">
        insert into finance_repay
        (repay_date, customer_no, name,
         mobile, loan_period, loan_amount,
         pay_amount, bank_no, order_status,
          order_no, loan_number, actual_amount,
            loan_type, pay_status,loan_Channel)
        select date_add(now(), interval loan_period day),customer_no,name,
        mobile,loan_period,loan_amount,
        pay_amount,bank_no,3,
        order_no,loan_number, 0,
        8,3,1
        from finance_loan
        where id = #{id}
    </insert>

    <select id="getCountDate" resultType="Map">
        select distinct (case  when  loan_type in (1,2,7) then DATE_FORMAT(create_time,"%Y-%m-%d")
  when  loan_type in (3,4,5,6) then DATE_FORMAT(repay_date,"%Y-%m-%d") end)  countDate
from finance_pay_log where DATE_SUB(curdate(),INTERVAL 1 DAY) = DATE_FORMAT(create_time,"%Y-%m-%d")
    </select>

    <insert id="saveFinanceLoan" parameterType="com.cloud.model.product.FinanceLoanModel" useGeneratedKeys="true"
            keyProperty="id">
        insert into finance_loan
        (create_time, order_no, customer_no,
        name, mobile, loan_period,
        loan_amount, pay_amount, bank_no,
         loan_number,txn_direction,
         loan_channel,
         pay_status,order_status,
         failure_reason,origin_amount)
        values
        (
        now(),#{orderNo},#{customerNo},
        #{name},#{mobile},#{loanPeriod},
        #{loanAmount},#{payAmount},#{bankNo},
        #{loanNumber},#{txnDirection},
        #{loanChannel},
        #{payStatus},#{orderStatus},
        #{failureReason},#{originAmount}
        )
    </insert>

    <select id="getFinanceLoanCount" parameterType="Map"
            resultType="com.cloud.order.model.FinanceLoanReportRecordModel">
        select
        DATE_FORMAT(report_date, "%Y-%m-%d") reportDate,
        loan_amount loanAmount,
        loan_count loanCount,
        loan_seven_5000_count loanSeven5000Count,
        loan_seven_10000_count loanSeven10000Count,
        loan_fourteen_5000_count loanFourteen5000Count,
        loan_fourteen_10000_count loanFourteen10000Count,
        loan_seven_3000_count loanSeven3000Count,
        loan_seven_8000_count loanSeven8000Count,
        loan_seven_12000_count loanSeven12000Count,
        loan_seven_13000_count loanSeven13000Count,
        loan_fourteen_3000_count loanFourteen3000Count,
        loan_fourteen_8000_count loanFourteen8000Count,
        loan_fourteen_12000_count loanFourteen12000Count,
        loan_fourteen_13000_count loanFourteen13000Count
        from finance_report_record
        <where>
            1=1 and DATE_FORMAT(report_date,"%Y-%m-%d") &lt; DATE_FORMAT(now(),"%Y-%m-%d")

            and ( loan_amount!=0 or loan_count!=0 or loan_seven_5000_count!=0
            or loan_seven_10000_count!=0 or loan_fourteen_5000_count!=0 or loan_fourteen_10000_count!=0)
            <if test="beginDate != null and beginDate != ''">
                and DATE_FORMAT(report_date,"%Y-%m-%d") &gt;= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                and DATE_FORMAT(report_date,"%Y-%m-%d") &lt;= #{endDate}
            </if>
        </where>
        order by report_date desc
    </select>

    <sql id="fromLoan">
        from finance_loan where pay_status = 1 and DATE_FORMAT(create_time,"%Y-%m-%d")=#{item.countDate}
    </sql>
    <sql id="fromPay">
        from finance_repay where  DATE_FORMAT(repay_date,"%Y-%m-%d")=#{item.countDate}
    </sql>
    <sql id="fromRepayLog">
        from finance_repay a left join finance_pay_log b on a.order_no=b.order_no
where b.loan_type in (3,4,5,6) and b.pay_status=1 and DATE_FORMAT(a.repay_date,"%Y-%m-%d")=#{item.countDate}
    </sql>
    <insert id="replaceFinanceReportRecord" parameterType="List">
        replace into finance_report_record
        ( report_date, loan_amount, loan_count,
        loan_seven_5000_count, loan_fourteen_10000_count, loan_fourteen_5000_count,
        loan_seven_10000_count, principal_amount, principal_fourteen_amount,
        principal_seven_amount, repayment_amount, repayment_fourteen_amount,
        repayment_seven_amount, expore_count, payments_fourteen_count,
        payments_seven_count, payments_count, due_fourteen_count,
        due_seven_count, due_count) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            STR_TO_DATE( #{item.countDate},"%Y-%m-%d") ,
            (select ifnull(sum(pay_amount),0 )
            <include refid="fromLoan"/>
            ),
            (select count(*)
            <include refid="fromLoan"/>
            ),
            (select count(*)
            <include refid="fromLoan"/>
            and loan_period =7 and loan_amount = 5000 ),
            (select count(*)
            <include refid="fromLoan"/>
            and loan_period =14 and loan_amount = 10000 ),
            (select count(*)
            <include refid="fromLoan"/>
            and loan_period =14 and loan_amount = 5000 ),
            (select count(*)
            <include refid="fromLoan"/>
            and loan_period =7 and loan_amount = 10000 ),
            (select ifnull(sum(loan_amount),0 )
            <include refid="fromPay"/>
            ),
            (select ifnull(sum(loan_amount),0 )
            <include refid="fromPay"/>
            and loan_period = 14 ),
            (select ifnull(sum(loan_amount),0 )
            <include refid="fromPay"/>
            and loan_period =7 ),
            (select ifnull(sum(b.amount),0 )
            <include refid="fromRepayLog"/>
            ),
            (select ifnull(sum(b.amount),0 )
            <include refid="fromRepayLog"/>
            and a.loan_period =14 ),
            (select ifnull(sum(b.amount),0 )
            <include refid="fromRepayLog"/>
            and a.loan_period =7 ),
            (select count(*)
            <include refid="fromRepayLog"/>
            and b.loan_type = 6 ),
            (select count(*)
            <include refid="fromPay"/>
            and loan_period =14 and pay_status = 1 ),
            (select count(*)
            <include refid="fromPay"/>
            and loan_period =7 and pay_status = 1 ),
            (select count(*)
            <include refid="fromPay"/>
            and pay_status = 1 ),
            (select count(*)
            <include refid="fromPay"/>
            and loan_period =14 ),
            (select count(*)
            <include refid="fromPay"/>
            and loan_period =7 ),
            (select count(*)
            <include refid="fromPay"/>
            )
            )
        </foreach>

    </insert>

    <update id="updatePayLogProcess">
        update finance_pay_log
        set pay_status = 0,
            order_status = 0,
            failure_reason = #{failureReason}
        where serial_number = #{serialNumber}
    </update>

    <insert id="saveLoanInfo" parameterType="com.cloud.model.appUser.AppUserLoanInfo" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO user_loan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="loanNumber != null">
                loan_number,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="overdueDay != null">
                overdue_day,
            </if>
            <if test="loanChannel != null">
                loan_channel,
            </if>
            <if test="borrowAmount != null">
                borrow_amount,
            </if>
            <if test="loanMoneyAmount != null">
                loan_money_amount,
            </if>
            <if test="shouldRepayAmount != null">
                should_repay_amount,
            </if>
            <if test="paidTotalAmount != null">
                paid_total_amount,
            </if>
            <if test="lateCharge != null">
                late_charge,
            </if>
            <if test="deferDisbursement != null">
                defer_disbursement,
            </if>
            <if test="overdueStatus != null">
                overdue_status,
            </if>
            <if test="loanStatus != null">
                loan_status,
            </if>
            <if test="balanceDateStatus != null">
                balance_date_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="balanceDate != null">
                balance_date,
            </if>
            <if test="overdueStartDate != null">
                overdue_start_date,
            </if>
            <if test="extensionDueDate != null">
                extension_due_date,
            </if>
            <if test="realClosingDate != null">
                real_closing_date,
            </if>
            <if test="loanEndDate != null">
                loan_end_date,
            </if>
            <if test="loanStartDate != null">
                loan_start_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="productId != null">
                #{productId},
            </if>
            <if test="loanNumber != null">
                #{loanNumber},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="userPhone != null">
                #{userPhone},
            </if>
            <if test="overdueDay != null">
                #{overdueDay},
            </if>
            <if test="loanChannel != null">
                #{loanChannel},
            </if>
            <if test="borrowAmount != null">
                #{borrowAmount},
            </if>
            <if test="loanMoneyAmount != null">
                #{loanMoneyAmount},
            </if>
            <if test="shouldRepayAmount != null">
                #{shouldRepayAmount},
            </if>
            <if test="paidTotalAmount != null">
                #{paidTotalAmount},
            </if>
            <if test="lateCharge != null">
                #{lateCharge},
            </if>
            <if test="deferDisbursement != null">
                #{deferDisbursement},
            </if>
            <if test="overdueStatus != null">
                #{overdueStatus},
            </if>
            <if test="loanStatus != null">
                #{loanStatus},
            </if>
            <if test="balanceDateStatus != null">
                #{balanceDateStatus},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="balanceDate != null">
                #{balanceDate},
            </if>
            <if test="overdueStartDate != null">
                #{overdueStartDate},
            </if>
            <if test="extensionDueDate != null">
                #{extensionDueDate},
            </if>
            <if test="realClosingDate != null">
                #{realClosingDate},
            </if>
            <if test="loanEndDate != null">
                #{loanEndDate},
            </if>
            <if test="loanStartDate != null">
                #{loanStartDate},
            </if>
        </trim>
    </insert>

    <select id="getBankNo" resultType="String">
        select bank_account from user_bank_card where id =(select max(id) from user_bank_card where  user_id = #{userId} )
    </select>

    <select id="getUserLoadByCondition" resultType="com.cloud.model.user.UserLoan">
        select * from
        (
        SELECT
        ul.*
        FROM
        user_loan AS ul
        WHERE
        EXISTS (
        SELECT
        uc.user_id
        FROM
        user_contact AS uc
        WHERE
        uc.phone = ul.user_phone
        <if test="userId != null">
            AND uc.user_id = #{userId}
        </if>
        <if test="userContactRelations != null">
            AND uc.relation IN
            <foreach collection="userContactRelations" open="(" close=")" item="relation" separator=",">
                #{relation}
            </foreach>
        </if>
        ) order by create_time desc limit 1 ) a
        where
        a.loan_status != 3 and a.loan_status!=5 and a.loan_status!=2
    </select>

    <select id="getUserOverdueLoanByAadhaarAccount" resultType="com.cloud.model.user.UserLoan">
        SELECT
            ul.*
        FROM
            user_loan AS ul
            INNER JOIN user_info AS ui ON ul.user_id = ui.id
        WHERE
            ui.aadhaar_account = #{aadhaarAccount}
            AND ul.loan_status = 1
    </select>

    <select id="getLoanCountInSameCompanyName" resultType="int">
		SELECT
			COUNT(DISTINCT(customer_no)) loan_count
		FROM
			finance_loan,
			(
					SELECT
						DISTINCT(ue.user_id)
					FROM
						user_info_expand ue,
						(
							SELECT
								DISTINCT(company_name)
							FROM
								user_info_expand
							WHERE
								user_id = #{userId}
								AND company_name NOT IN ( SELECT NAME FROM risk_india_area )
						) cm
				WHERE
					ue.company_name = cm.company_name
			) tmp
		WHERE
			finance_loan.pay_status = 1
		AND
			finance_loan.order_status = 1
		AND
			finance_loan.customer_no = tmp.user_id

    </select>

    <select id="getDueUserCountInSameCompanyName" resultType="int">
		SELECT
			COUNT(finance_due_order.customer_no) due_count
		FROM
			finance_due_order,
			(
					SELECT
						DISTINCT(ue.user_id)
					FROM
						user_info_expand ue,
						(
							SELECT
								DISTINCT(company_name)
							FROM
								user_info_expand
							WHERE
								user_id = #{userId}
								AND company_name NOT IN ( SELECT NAME FROM risk_india_area )
						) cm
				WHERE
					ue.company_name = cm.company_name
			) tmp
		WHERE
			finance_due_order.due_end = 0
		AND
			finance_due_order.is_extension = 0
		AND
			finance_due_order.customer_no = tmp.user_id

    </select>

    <select id="getLoanCountInSameCompanyPhone" resultType="int">
		SELECT
			COUNT(DISTINCT(customer_no)) loan_count
		FROM
			finance_loan,
			(
				SELECT
					DISTINCT(user_address.user_id)
				FROM
					user_address,
					(
						SELECT
							DISTINCT(company_phone)
						FROM
							user_address
						WHERE
							user_id = #{userId}
					) ua
				WHERE
					user_address.company_phone = ua.company_phone
			) tmp
		WHERE
			finance_loan.pay_status = 1
		AND
			finance_loan.order_status = 1
		AND
			finance_loan.customer_no = tmp.user_id

    </select>

    <select id="getDueUserCountInSameCompanyPhone" resultType="int">
		SELECT
			count( DISTINCT customer_no )
		FROM
			user_info_history his
			JOIN user_address addr ON his.company_address_id = addr.id
			JOIN finance_due_order due ON his.order_no = due.order_no
		WHERE
			addr.company_phone IN (
			SELECT
				addr.company_phone
			FROM
				user_info_history his
				JOIN user_address addr ON his.company_address_id = addr.id
			WHERE
				his.order_no = #{orderNum}
			)
			AND due.due_end = 0
			AND due.is_extension = 0
			AND his.order_no != #{orderNum}
    </select>

    <select id="findFailFianceLoanByUserIdAndReason" resultType="Map">
        SELECT
        finance_loan.create_time,
        finance_loan.order_no,
        finance_loan.customer_no,
        finance_loan.`name`,
        finance_loan.mobile,
        finance_loan.loan_period,
        finance_loan.loan_amount,
        finance_loan.pay_amount,
        finance_loan.bank_no,
        finance_loan.loan_channel,
        finance_loan.pay_status,
        finance_loan.order_status,
        finance_loan.failure_reason,
        finance_loan.`comment`,
        finance_loan.id,
        finance_loan.loan_number,
        finance_loan.txn_direction,
        finance_loan.origin_amount,
        finance_loan.ifsc_code
        FROM
        finance_loan

        where finance_loan.pay_status=0
        <if test=" reason != null and reason != ''">
            <bind name="_reason2" value="'%' +  reason2 + '%'"/>
            <bind name="_reason" value="'%' + reason + '%'"/>
            and (finance_loan.failure_reason like #{_reason}
            or finance_loan.failure_reason like #{_reason2})
        </if>
     and  (DATE_Add(finance_loan.notice_modify_bankcard_date,INTERVAL  3 Day)>= DATE_FORMAT(now(),'%Y-%m-%d') or finance_loan.notice_modify_bankcard_date is null )
        and finance_loan.customer_no=#{userId}
    and   date_add(  DATE_FORMAT(finance_loan.create_time,'%Y-%m-%d %H:%i:%s') , INTERVAL 7 DAY )>= DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s')
        and (finance_loan.`comment`='' or finance_loan.`comment` is null )
    </select>

    <update id="updateFailFianceLoanRemarkById">
        update  finance_loan
        set  bank_no=#{bankCode},
        `comment`=#{comment},
        modify_bankcard_count=modify_bankcard_count+1
        where id=#{id}
    </update>


    <select id="getFinancePayLogModelList" parameterType="Map" resultType="com.cloud.model.pay.FinancePayLogModel">
        select
        fpl.id,
        DATE_FORMAT(fpl.create_time,'%Y-%m-%d %H:%i:%s') createTime,
        DATE_FORMAT(fpl.repay_date,'%Y-%m-%d') repayDate,
        CONCAT('MN', fpl.order_no, 'PD') orderNo,
        fpl.customer_no customerNo,
        fpl.name,
        fpl.mobile,
        fpl.amount,
        fpl.bank_no bankNo,
        fpl.loan_type loanType,
        fpl.handler,
        fpl.pay_status payStatus,
        fpl.order_status orderStatus,
        fpl.loan_channel repayChannel,
        ul.extension_due_date extensionEnd,
        case when ul.overdue_status = 1 then ul.should_repay_amount else null end extensionRepayAmount,
        case when ul.overdue_status = 1 then DATEDIFF(fe.extension_end, fe.extension_start) + 1 else null end
        extensionPeroid
        from finance_pay_log fpl
        left join user_loan ul on fpl.order_no = ul.loan_number
        left join (select * from finance_extension where id in (select max(id) from finance_extension group by
        order_no)) fe on fe.order_no = fpl.order_no
        <where>
            1=1
            <if test="beginDate != null and beginDate != ''">
                and DATE_FORMAT(fpl.create_time,'%Y-%m-%d') >= #{beginDate}
            </if>
            <if test="endDate != null and endDate != ''">
                and DATE_FORMAT(fpl.create_time,'%Y-%m-%d') &lt;= #{endDate}
            </if>
            <if test="customerNo != null and customerNo != ''">
                and fpl.customer_no like concat('%',#{customerNo},'%')
            </if>
            <if test="mobile != null and mobile != ''">
                and fpl.mobile like concat('%',#{mobile},'%')
            </if>
            <if test="orderNo != null and orderNo != ''">
                and fpl.order_no like concat('%',#{orderNo},'%')
            </if>
            <if test="repayDate !=null and repayDate != ''">
                and DATE_FORMAT(fpl.repay_date,'%Y-%m-%d') = #{repayDate}
            </if>
            <if test="loanType != null and loanType != ''">
                and fpl.loan_type = #{loanType}
            </if>
            <if test="handler != null and handler != ''">
                and fpl.handler = #{handler}
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                and fpl.order_status = #{orderStatus}
            </if>
        </where>
        order by fpl.create_time desc
    </select>

    <select id="querySerialNumByStatus" resultType="java.lang.String">
        SELECT
	        serial_number
        FROM
	        finance_pay_log
        WHERE
	        pay_status = #{payStatus}
        <if test="startQueryDate != null">
                AND DATE_FORMAT(create_time, '%Y-%m-%d %T') &gt;= DATE_FORMAT(#{startQueryDate}, '%Y-%m-%d %T')
        </if>
        <if test="endQueryDate != null">
                AND DATE_FORMAT(create_time, '%Y-%m-%d %T') &lt;= DATE_FORMAT(#{endQueryDate}, '%Y-%m-%d %T')
        </if>
	</select>

    <select id="querySerialNumByStatusAndloanType" resultType="java.lang.String">
        SELECT
        serial_number
        FROM
        finance_pay_log
        WHERE
        pay_status = #{payStatus} and loan_type in
        <foreach collection="loanTypes" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

        <if test="startQueryDate != null">
                AND DATE_FORMAT(create_time, '%Y-%m-%d %T') &gt;= DATE_FORMAT(#{startQueryDate}, '%Y-%m-%d %T')
        </if>
        <if test="endQueryDate != null">
                AND DATE_FORMAT(create_time, '%Y-%m-%d %T') &lt;= DATE_FORMAT(#{endQueryDate}, '%Y-%m-%d %T')
        </if>
    </select>

    <!-- 获取最新最近的一条展期记录 -->
    <select id="getOneNewFinanceExtension" resultType="com.cloud.order.model.FinanceExtensionModel">
        SELECT
        *
        FROM
        `finance_extension`
        WHERE
        1=1
        <if test="orderNo != null and orderNo != ''">
            and `order_no` = #{orderNo}
        </if>
        order by id desc
        limit 1
    </select>


    <select id="countFinanceLoanByUserId" resultType="int">
        SELECT
	        COUNT(1)
        FROM
	        finance_loan
        WHERE
	        customer_no = #{customerNo}
        AND pay_status = #{payStatus}
    </select>

    <select id="listQueryPayedPhonesInPhones" resultType="java.lang.String">
		SELECT
			ul.user_phone
		FROM
			user_loan ul
			JOIN finance_loan fl ON fl.order_no = ul.loan_number
			AND fl.loan_status = 1
			AND pay_status = 1
		WHERE
			ul.user_phone IN
        <foreach collection="list" index="index" item="phone" open="(" separator="," close=")">
            #{phone}
        </foreach>
    </select>

</mapper>