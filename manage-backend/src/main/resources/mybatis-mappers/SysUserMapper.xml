<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.backend.dao.SysUserDao">

	<update id="update">
		update sys_user
		<set>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
			<if test="username != null and username != ''">
				username = #{username},
			</if>
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="nickname != null and nickname != ''">
				nickname = #{nickname},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="enabled != null">
				enabled = #{enabled,jdbcType=BIT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="comment != null and comment != ''">
				comment = #{comment},
			</if>
			<if test=" avatarUrl != null and avatarUrl != ''">
				avatar_url = #{avatarUrl},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<sql id="where">
		<where>
			<if test="username != null and username != ''">
				<bind name="_username" value="'%' + username + '%'"/>
				and t.username like #{_username}
			</if>
			<if test="nickname != null and nickname != ''">
				<bind name="_nickname" value="'%' + nickname + '%'"/>
				and t.nickname like #{_nickname}
			</if>
			<if test="enabled != null and enabled != ''">
				and t.enabled = #{enabled}
			</if>
		</where>
	</sql>
	<select id="count" resultType="int">
		select count(*) from sys_user t
		<include refid="where" />
	</select>

	<select id="findData" resultType="com.cloud.model.user.SysUser">
		select * from sys_user t
		<include refid="where" />
		order by t.id desc
		limit #{start}, #{length}
	</select>

	<resultMap id="SysUserMap" type="com.cloud.model.user.SysUser">
		<id column="user_id" property="id"></id>
		<result column="username" property="username" ></result>
		<result column="nickname" property="nickname" ></result>
		<result column="password" property="password" ></result>
		<result column="create_time" property="createTime" ></result>
		<result column="enabled" property="enabled" ></result>
		<result column="email" property="email" ></result>
		<result column="comment" property="comment" ></result>
		<result column="avatar_url" property="avatarUrl" ></result>
		<association property="dept" javaType="com.cloud.model.user.SysDept">
			<id column="dept_id" property="id"></id>
			<result column="dept_name" property="name" ></result>
		</association>
	</resultMap>

	<select id="allSysUsers" resultMap="SysUserMap">
		SELECT
			u.id user_id,
			u.username,
			u.nickname,
			u.create_time,
			u.enabled,
			u.email,
			u.comment,
			u.avatar_url,
			d.id dept_id,
			d.NAME dept_name
		FROM
			sys_user u
			JOIN sys_user_dept_relation ud ON u.id = ud.sys_user_id
			JOIN sys_dept d ON d.id = ud.dept_id
		where
			1 = 1
			and u.id != 1
			<if test="nickname != null and nickname != ''">
				and u.nickname like concat('%',#{nickname},'%')
			</if>
			<if test="sysUserId != null">
				and u.id = #{sysUserId}
			</if>
			<if test="deptId != null">
				and d.id = #{deptId}
			</if>
		order by u.id
    </select>

	<select id="findById" resultMap="SysUserMap">
		SELECT
			u.id user_id,
			u.username,
			u.password,
			u.nickname,
			u.create_time,
			u.enabled,
			u.email,
			u.avatar_url,
			u.COMMENT,
			d.id dept_id,
			d.NAME dept_name
		FROM
			sys_user u
			LEFT JOIN sys_user_dept_relation ud ON u.id = ud.sys_user_id
			LEFT JOIN sys_dept d ON d.id = ud.dept_id
		WHERE
			u.id=#{id}
	</select>

	<select id="queryNotGroupUsers" parameterType="List"  resultType="com.cloud.model.user.SysUser">
		SELECT
			distinct
			s.*
		FROM
			sys_user s
				JOIN sys_user_permission_relation r ON s.id = r.sys_user_id
				JOIN sys_permission p ON p.id = r.permission_id
		WHERE
				p.permission IN ( 'order:ergency:manager', 'order:ergency:my', 'permission:all' )
		<if test="groupUserIdList != null and groupUserIdList.size()>0">
			and s.id not in
			<foreach collection="groupUserIdList" item="item" index="no" open="("
					 separator="," close=")">
				#{item}
			</foreach>
		</if>
	</select>
</mapper>